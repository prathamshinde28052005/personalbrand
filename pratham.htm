<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="theme-color" content="#6a4c93">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <title>SMART HOSPITAL ASSISTANCE</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        :root {
            --primary-color: #6a4c93;
            --secondary-color: #8a5a44;
            --accent-color: #f8bbd0;
            --dark-color: #1a1a2e;
            --light-color: #e6f9ff;
            --danger-color: #ff6b6b;
            --success-color: #51cf66;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
            -webkit-tap-highlight-color: transparent;
        }

        body {
            overflow: auto;
            background-color: var(--dark-color);
            color: var(--light-color);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            touch-action: manipulation;
        }

        .container {
            width: 100%;
            max-width: 100%;
            height: 100vh;
            padding: 10px;
            overflow-y: auto;
            -webkit-overflow-scrolling: touch;
        }

        .page {
            width: 100%;
            min-height: calc(100vh - 20px);
            background: rgba(26, 26, 46, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(248, 187, 208, 0.2);
            margin-bottom: 20px;
        }

        .hidden {
            display: none;
            opacity: 0;
        }

        /* Jellyfish Theme Elements */
        .jellyfish-logo {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 20px;
        }

        .jellyfish-logo.small {
            flex-direction: row;
            margin-bottom: 0;
            gap: 10px;
        }

        .jellyfish {
            position: relative;
            width: 80px;
            height: 80px;
            margin-bottom: 10px;
        }

        .jellyfish .bell {
            position: absolute;
            width: 50px;
            height: 65px;
            background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
            border-radius: 50% 50% 40% 40%;
            top: 0;
            left: 15px;
            box-shadow: 0 5px 15px rgba(106, 76, 147, 0.5);
            animation: float 3s ease-in-out infinite;
            filter: drop-shadow(0 0 8px rgba(248, 187, 208, 0.7));
        }

        .jellyfish .tentacles {
            position: absolute;
            bottom: -25px;
            left: 25px;
        }

        .jellyfish .tentacle {
            width: 4px;
            height: 30px;
            background: linear-gradient(to bottom, var(--accent-color), transparent);
            margin: 0 auto 4px;
            border-radius: 4px;
            animation: wave 3s ease-in-out infinite;
            transform-origin: top;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-8px); }
        }

        @keyframes wave {
            0%, 100% { transform: rotate(0deg); }
            25% { transform: rotate(8deg); }
            75% { transform: rotate(-8deg); }
        }

        /* Buttons and Inputs */
        .three-d-button {
            padding: 12px 20px;
            background: linear-gradient(145deg, var(--primary-color), #5a3d7a);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            outline: none;
            transition: all 0.2s ease;
            box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.3),
                        -1px -1px 8px rgba(255, 255, 255, 0.1);
            width: 100%;
            margin: 5px 0;
        }

        .three-d-button:active {
            transform: translateY(2px);
            box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.3);
        }

        .three-d-menu-button {
            width: 100%;
            height: 120px;
            background: linear-gradient(145deg, #4a3c6e, #5a4a7f);
            border-radius: 15px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: white;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3),
                        -2px -2px 10px rgba(255, 255, 255, 0.1);
            margin: 5px 0;
        }

        .three-d-menu-button:active {
            transform: translateY(5px);
            box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.3);
        }

        .button-icon {
            font-size: 40px;
            margin-bottom: 8px;
            text-shadow: 0 0 8px rgba(248, 187, 208, 0.7);
        }

        .three-d-input {
            width: 100%;
            padding: 12px 15px;
            background: rgba(26, 26, 46, 0.7);
            border: 1px solid rgba(248, 187, 208, 0.3);
            border-radius: 8px;
            color: white;
            font-size: 16px;
            transition: all 0.3s ease;
            box-shadow: inset 2px 2px 8px rgba(0, 0, 0, 0.3),
                        inset -2px -2px 8px rgba(255, 255, 255, 0.05);
            margin: 5px 0;
        }

        /* Layout and Components */
        .login-form {
            max-width: 100%;
            margin: 0 auto;
            padding: 0 10px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
            color: var(--accent-color);
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid rgba(248, 187, 208, 0.2);
            flex-wrap: wrap;
        }

        .menu-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
            margin-top: 20px;
        }

        .form-container, .patient-details {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        .search-box {
            display: flex;
            gap: 10px;
        }

        .search-box input {
            flex: 1;
        }

        .detail-item {
            margin-bottom: 10px;
            padding-bottom: 10px;
            border-bottom: 1px dashed rgba(248, 187, 208, 0.1);
        }

        .detail-label {
            font-weight: 600;
            color: var(--accent-color);
            display: inline-block;
            min-width: 120px;
        }

        .patient-photo, .photo-preview {
            width: 100%;
            height: 200px;
            background: rgba(26, 26, 46, 0.7);
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
            margin: 10px 0;
        }

        .patient-photo {
            border: 2px solid var(--accent-color);
        }

        .photo-preview {
            border: 2px dashed var(--accent-color);
        }

        .photo-placeholder, .preview-placeholder {
            color: rgba(255, 255, 255, 0.5);
            font-style: italic;
            padding: 20px;
            text-align: center;
        }

        .button-group {
            display: flex;
            gap: 10px;
            margin: 10px 0;
        }

        /* Chat Interface */
        .chat-container {
            display: flex;
            flex-direction: column;
            height: calc(100vh - 180px);
        }

        .chat-box {
            flex: 1;
            background: rgba(26, 26, 46, 0.5);
            border-radius: 15px;
            padding: 15px;
            margin-bottom: 15px;
            overflow-y: auto;
            border: 1px solid rgba(248, 187, 208, 0.2);
            -webkit-overflow-scrolling: touch;
        }

        .chat-message {
            margin-bottom: 12px;
            max-width: 85%;
            padding: 10px 15px;
            border-radius: 15px;
            position: relative;
            animation: messageAppear 0.3s ease-out;
            word-break: break-word;
        }

        .chat-message.bot {
            background: rgba(106, 76, 147, 0.3);
            border-bottom-left-radius: 5px;
            margin-right: auto;
            border: 1px solid rgba(106, 76, 147, 0.5);
        }

        .chat-message.user {
            background: rgba(248, 187, 208, 0.2);
            border-bottom-right-radius: 5px;
            margin-left: auto;
            border: 1px solid rgba(248, 187, 208, 0.3);
        }

        .chat-input {
            display: flex;
            gap: 8px;
            margin-top: 10px;
        }

        .chat-input input {
            flex: 1;
            padding: 12px 15px;
        }

        .voice-btn {
            width: 50px;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 20px;
        }

        @keyframes messageAppear {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        /* PWA Styles */
        #installBtn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--primary-color);
            color: white;
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            font-size: 24px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            display: none;
        }

        /* Very small screens */
        @media (max-width: 350px) {
            .menu-grid {
                grid-template-columns: 1fr;
            }
            
            .three-d-menu-button {
                height: 100px;
            }
            
            .button-icon {
                font-size: 30px;
            }
        }
    </style>
</head>
<body>
    <!-- Main Container -->
    <div class="container" id="main-container">
        <!-- Login Page (Default View) -->
        <div class="page" id="login-page">
            <div class="jellyfish-logo">
                <div class="jellyfish">
                    <div class="bell"></div>
                    <div class="tentacles">
                        <div class="tentacle"></div>
                        <div class="tentacle"></div>
                        <div class="tentacle"></div>
                        <div class="tentacle"></div>
                    </div>
                </div>
                <h1>PRATHAM HOSPITAL</h1>
            </div>
            
            <div class="login-form">
                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" id="username" class="three-d-input" autocomplete="username">
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" class="three-d-input" autocomplete="current-password">
                </div>
                <button class="three-d-button" id="login-btn">LOGIN</button>
            </div>
        </div>
        
        <!-- Main Menu Page -->
        <div class="page hidden" id="main-menu">
            <div class="header">
                <div class="jellyfish-logo small">
                    <div class="jellyfish">
                        <div class="bell"></div>
                        <div class="tentacles">
                            <div class="tentacle"></div>
                            <div class="tentacle"></div>
                        </div>
                    </div>
                    <h2>SMART HOSPITAL</h2>
                </div>
                <button class="three-d-button logout-btn" id="logout-btn">LOGOUT</button>
            </div>
            
            <div class="menu-grid">
                <button class="three-d-menu-button" data-page="add-patient">
                    <div class="button-icon">➕</div>
                    <span>Add Patient</span>
                </button>
                <button class="three-d-menu-button" data-page="view-patient">
                    <div class="button-icon">👁️</div>
                    <span>View Patient</span>
                </button>
                <button class="three-d-menu-button" data-page="delete-patient">
                    <div class="button-icon">❌</div>
                    <span>Delete Patient</span>
                </button>
                <button class="three-d-menu-button" data-page="upload-photo">
                    <div class="button-icon">📷</div>
                    <span>Upload Photo</span>
                </button>
                <button class="three-d-menu-button" data-page="ai-assistant">
                    <div class="button-icon">🤖</div>
                    <span>AI Assistant</span>
                </button>
            </div>
        </div>
        
        <!-- Add Patient Page -->
        <div class="page hidden" id="add-patient">
            <div class="header">
                <button class="three-d-button back-btn" data-page="main-menu">← BACK</button>
                <h2>ADD PATIENT</h2>
            </div>
            
            <div class="form-container">
                <div class="form-group">
                    <label for="patient-id">Patient ID</label>
                    <input type="text" id="patient-id" class="three-d-input">
                </div>
                <div class="form-group">
                    <label for="patient-name">Patient Name</label>
                    <input type="text" id="patient-name" class="three-d-input">
                </div>
                <div class="form-group">
                    <label for="doctor-name">Doctor Name</label>
                    <input type="text" id="doctor-name" class="three-d-input">
                </div>
                <div class="form-group">
                    <label for="age">Age</label>
                    <input type="number" id="age" class="three-d-input">
                </div>
                <div class="form-group">
                    <label for="gender">Gender (M/F/Other)</label>
                    <input type="text" id="gender" class="three-d-input">
                </div>
                <div class="form-group">
                    <label for="contact">Contact Number</label>
                    <input type="tel" id="contact" class="three-d-input" inputmode="tel">
                </div>
                <div class="form-group">
                    <label for="medication">Medication</label>
                    <input type="text" id="medication" class="three-d-input">
                </div>
                <div class="form-group">
                    <label for="appointment-date">Appointment Date</label>
                    <input type="date" id="appointment-date" class="three-d-input">
                </div>
                <div class="form-group">
                    <label for="treatment-history">Treatment History</label>
                    <textarea id="treatment-history" class="three-d-input" rows="4"></textarea>
                </div>
                <button class="three-d-button save-btn" id="save-patient-btn">SAVE PATIENT</button>
            </div>
        </div>
        
        <!-- View Patient Page -->
        <div class="page hidden" id="view-patient">
            <div class="header">
                <button class="three-d-button back-btn" data-page="main-menu">← BACK</button>
                <h2>VIEW PATIENT</h2>
            </div>
            
            <div class="search-container">
                <div class="form-group">
                    <label for="search-id">Enter Patient ID</label>
                    <div class="search-box">
                        <input type="text" id="search-id" class="three-d-input">
                        <button class="three-d-button" id="search-btn">SEARCH</button>
                    </div>
                </div>
            </div>
            
            <div class="patient-details hidden" id="patient-details">
                <div class="detail-item">
                    <span class="detail-label">Patient ID:</span>
                    <span class="detail-value" id="detail-id"></span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Patient Name:</span>
                    <span class="detail-value" id="detail-name"></span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Doctor Name:</span>
                    <span class="detail-value" id="detail-doctor"></span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Age:</span>
                    <span class="detail-value" id="detail-age"></span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Gender:</span>
                    <span class="detail-value" id="detail-gender"></span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Contact:</span>
                    <span class="detail-value" id="detail-contact"></span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Medication:</span>
                    <span class="detail-value" id="detail-medication"></span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Appointment Date:</span>
                    <span class="detail-value" id="detail-date"></span>
                </div>
                <div class="detail-item">
                    <span class="detail-label">Treatment History:</span>
                    <div class="detail-value" id="detail-history"></div>
                </div>
                <div class="patient-photo" id="patient-photo">
                    <div class="photo-placeholder">NO PHOTO AVAILABLE</div>
                </div>
            </div>
        </div>
        
        <!-- Delete Patient Page -->
        <div class="page hidden" id="delete-patient">
            <div class="header">
                <button class="three-d-button back-btn" data-page="main-menu">← BACK</button>
                <h2>DELETE PATIENT</h2>
            </div>
            
            <div class="form-group">
                <label for="delete-id">Enter Patient ID to Delete</label>
                <input type="text" id="delete-id" class="three-d-input">
            </div>
            <button class="three-d-button danger" id="delete-btn">DELETE PATIENT</button>
            <div class="warning" style="color: var(--danger-color); text-align: center; margin-top: 15px; font-weight: 600;">
                Warning: This action cannot be undone!
            </div>
        </div>
        
        <!-- Upload Photo Page -->
        <div class="page hidden" id="upload-photo">
            <div class="header">
                <button class="three-d-button back-btn" data-page="main-menu">← BACK</button>
                <h2>UPLOAD PHOTO</h2>
            </div>
            
            <div class="form-group">
                <label for="upload-id">Enter Patient ID</label>
                <input type="text" id="upload-id" class="three-d-input">
            </div>
            
            <div class="photo-preview" id="photo-preview">
                <div class="preview-placeholder">NO PHOTO SELECTED</div>
            </div>
            
            <div class="button-group">
                <button class="three-d-button" id="browse-btn">BROWSE</button>
                <button class="three-d-button" id="upload-btn">UPLOAD</button>
            </div>
            
            <input type="file" id="photo-input" accept="image/*" style="display: none;" capture="camera">
        </div>
        
        <!-- AI Assistant Page -->
        <div class="page hidden" id="ai-assistant">
            <div class="header">
                <button class="three-d-button back-btn" data-page="main-menu">← BACK</button>
                <h2>AI ASSISTANT</h2>
            </div>
            
            <div class="chat-container">
                <div class="chat-box" id="chat-box">
                    <div class="chat-message bot">
                        <div class="message-content">Hello! How can I assist you today?</div>
                    </div>
                </div>
                
                <div class="chat-input">
                    <input type="text" id="chat-input" class="three-d-input" placeholder="Type your message...">
                    <button class="three-d-button" id="send-btn">SEND</button>
                    <button class="three-d-button voice-btn" id="voice-btn">🎤</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Install Button (PWA) -->
    <button id="installBtn" style="display: none;">+</button>

    <script>
        // Database Simulation
        let patientsDB = [];
        let appointmentsDB = [];
        let remindersDB = [];
        let selectedPhoto = null;
        let deferredPrompt;

        // DOM Elements
        const pages = {
            'login-page': document.getElementById('login-page'),
            'main-menu': document.getElementById('main-menu'),
            'add-patient': document.getElementById('add-patient'),
            'view-patient': document.getElementById('view-patient'),
            'delete-patient': document.getElementById('delete-patient'),
            'upload-photo': document.getElementById('upload-photo'),
            'ai-assistant': document.getElementById('ai-assistant')
        };

        // Navigation Functions
        function showPage(pageId) {
            Object.values(pages).forEach(page => {
                if (page) page.classList.add('hidden');
            });
            if (pages[pageId]) {
                pages[pageId].classList.remove('hidden');
                window.scrollTo(0, 0);
            }
        }

        // Helper Functions
        function showError(message) {
            Swal.fire({
                title: 'Error',
                text: message,
                icon: 'error',
                background: '#1a1a2e',
                color: '#e6f9ff',
                confirmButtonColor: '#6a4c93'
            });
        }

        function addChatMessage(content, sender) {
            const chatBox = document.getElementById('chat-box');
            if (!chatBox) return;
            
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('chat-message', sender);
            
            const contentDiv = document.createElement('div');
            contentDiv.classList.add('message-content');
            contentDiv.textContent = content;
            
            messageDiv.appendChild(contentDiv);
            chatBox.appendChild(messageDiv);
            chatBox.scrollTop = chatBox.scrollHeight;
        }

        // Initialize the application
        function initApp() {
            // Login Button
            document.getElementById('login-btn')?.addEventListener('click', () => {
                const username = document.getElementById('username')?.value;
                const password = document.getElementById('password')?.value;
                
                if (username === 'pratham' && password === '1234') {
                    showPage('main-menu');
                } else {
                    showError('Invalid username or password!');
                }
            });

            // Logout Button
            document.getElementById('logout-btn')?.addEventListener('click', () => {
                showPage('login-page');
            });

            // Menu buttons
            document.querySelectorAll('.three-d-menu-button').forEach(button => {
                button.addEventListener('click', () => {
                    const page = button.getAttribute('data-page');
                    showPage(page);
                });
            });

            // Back buttons
            document.querySelectorAll('.back-btn').forEach(button => {
                button.addEventListener('click', () => {
                    const page = button.getAttribute('data-page');
                    showPage(page);
                });
            });

            // Add Patient
            document.getElementById('save-patient-btn')?.addEventListener('click', () => {
                const patient = {
                    id: document.getElementById('patient-id')?.value,
                    name: document.getElementById('patient-name')?.value,
                    doctor: document.getElementById('doctor-name')?.value,
                    age: document.getElementById('age')?.value,
                    gender: document.getElementById('gender')?.value,
                    contact: document.getElementById('contact')?.value,
                    medication: document.getElementById('medication')?.value,
                    appointmentDate: document.getElementById('appointment-date')?.value,
                    treatmentHistory: document.getElementById('treatment-history')?.value,
                    photoPath: ''
                };
                
                if (!patient.id || !patient.name) {
                    showError('Patient ID and Name are required!');
                    return;
                }
                
                if (patientsDB.some(p => p.id === patient.id)) {
                    showError('Patient ID already exists!');
                    return;
                }
                
                patientsDB.push(patient);
                
                Swal.fire({
                    title: 'Success',
                    text: 'Patient added successfully!',
                    icon: 'success',
                    background: '#1a1a2e',
                    color: '#e6f9ff',
                    confirmButtonColor: '#6a4c93'
                }).then(() => {
                    showPage('main-menu');
                    document.querySelectorAll('#add-patient input, #add-patient textarea').forEach(el => {
                        if (el) el.value = '';
                    });
                });
            });

            // View Patient
            document.getElementById('search-btn')?.addEventListener('click', () => {
                const patientId = document.getElementById('search-id')?.value;
                const detailsContainer = document.getElementById('patient-details');
                const photoContainer = document.getElementById('patient-photo');
                
                if (!patientId) {
                    showError('Please enter a Patient ID!');
                    return;
                }
                
                const patient = patientsDB.find(p => p.id === patientId);
                
                if (!patient) {
                    if (detailsContainer) detailsContainer.classList.add('hidden');
                    showError('No patient found with that ID!');
                    return;
                }
                
                // Fill in details
                document.getElementById('detail-id').textContent = patient.id || '';
                document.getElementById('detail-name').textContent = patient.name || '';
                document.getElementById('detail-doctor').textContent = patient.doctor || '';
                document.getElementById('detail-age').textContent = patient.age || '';
                document.getElementById('detail-gender').textContent = patient.gender || '';
                document.getElementById('detail-contact').textContent = patient.contact || '';
                document.getElementById('detail-medication').textContent = patient.medication || '';
                document.getElementById('detail-date').textContent = patient.appointmentDate || '';
                document.getElementById('detail-history').textContent = patient.treatmentHistory || '';
                
                // Handle photo
                if (photoContainer) {
                    photoContainer.innerHTML = '';
                    if (patient.photoPath) {
                        const img = document.createElement('img');
                        img.src = patient.photoPath;
                        img.style.width = '100%';
                        img.style.height = '100%';
                        img.style.objectFit = 'cover';
                        photoContainer.appendChild(img);
                    } else {
                        photoContainer.innerHTML = '<div class="photo-placeholder">NO PHOTO AVAILABLE</div>';
                    }
                }
                
                if (detailsContainer) detailsContainer.classList.remove('hidden');
            });

            // Delete Patient
            document.getElementById('delete-btn')?.addEventListener('click', () => {
                const patientId = document.getElementById('delete-id')?.value;
                
                if (!patientId) {
                    showError('Please enter a Patient ID!');
                    return;
                }
                
                const patientIndex = patientsDB.findIndex(p => p.id === patientId);
                
                if (patientIndex === -1) {
                    showError('No patient found with that ID!');
                    return;
                }
                
                Swal.fire({
                    title: 'Confirm Deletion',
                    text: `Are you sure you want to delete patient ${patientsDB[patientIndex].name}?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#ff6b6b',
                    cancelButtonColor: '#6a4c93',
                    background: '#1a1a2e',
                    color: '#e6f9ff',
                    confirmButtonText: 'Yes, delete it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        patientsDB.splice(patientIndex, 1);
                        Swal.fire({
                            title: 'Deleted!',
                            text: 'Patient has been deleted.',
                            icon: 'success',
                            background: '#1a1a2e',
                            color: '#e6f9ff',
                            confirmButtonColor: '#6a4c93'
                        }).then(() => {
                            showPage('main-menu');
                            document.getElementById('delete-id').value = '';
                        });
                    }
                });
            });

            // Upload Photo
            document.getElementById('browse-btn')?.addEventListener('click', () => {
                document.getElementById('photo-input').click();
            });
            
            document.getElementById('photo-input')?.addEventListener('change', (e) => {
                const file = e.target.files[0];
                if (!file) return;
                
                const reader = new FileReader();
                reader.onload = (event) => {
                    selectedPhoto = event.target.result;
                    const preview = document.getElementById('photo-preview');
                    if (preview) {
                        preview.innerHTML = '';
                        const img = document.createElement('img');
                        img.src = selectedPhoto;
                        img.style.width = '100%';
                        img.style.height = '100%';
                        img.style.objectFit = 'cover';
                        preview.appendChild(img);
                    }
                };
                reader.readAsDataURL(file);
            });

            document.getElementById('upload-btn')?.addEventListener('click', () => {
                const patientId = document.getElementById('upload-id')?.value;
                
                if (!patientId) {
                    showError('Please enter a Patient ID!');
                    return;
                }
                
                if (!selectedPhoto) {
                    showError('Please select a photo first!');
                    return;
                }
                
                const patientIndex = patientsDB.findIndex(p => p.id === patientId);
                
                if (patientIndex === -1) {
                    showError('No patient found with that ID!');
                    return;
                }
                
                patientsDB[patientIndex].photoPath = selectedPhoto;
                
                Swal.fire({
                    title: 'Success',
                    text: 'Photo uploaded successfully!',
                    icon: 'success',
                    background: '#1a1a2e',
                    color: '#e6f9ff',
                    confirmButtonColor: '#6a4c93'
                }).then(() => {
                    showPage('main-menu');
                    document.getElementById('upload-id').value = '';
                    selectedPhoto = null;
                    document.getElementById('photo-preview').innerHTML = '<div class="preview-placeholder">NO PHOTO SELECTED</div>';
                    document.getElementById('photo-input').value = '';
                });
            });

            // AI Assistant
            function processChatInput() {
                const chatInput = document.getElementById('chat-input');
                if (!chatInput) return;
                
                const userInput = chatInput.value.trim();
                if (!userInput) return;
                
                addChatMessage(userInput, 'user');
                chatInput.value = '';
                
                // Process input and generate response
                let response = "I didn't understand. How can I help you?";
                
                if (userInput.toLowerCase().includes('book appointment')) {
                    const name = userInput.toLowerCase().includes('for') ? 
                        userInput.split('for')[1].trim() : 'Patient';
                    appointmentsDB.push({ name, date: 'Tomorrow' });
                    response = `Appointment booked for ${name} on Tomorrow.`;
                } 
                else if (userInput.toLowerCase().includes('set reminder')) {
                    const words = userInput.split(' ');
                    if (words.includes('at')) {
                        const index = words.indexOf('at');
                        const medicine = words.slice(0, index).join(' ');
                        const time = words[index + 1];
                        remindersDB.push({ medicine, time });
                        response = `Reminder set for ${medicine} at ${time}.`;
                    }
                }
                else if (userInput.toLowerCase().includes('show my appointments')) {
                    if (appointmentsDB.length > 0) {
                        response = "Your Appointments:\n" + appointmentsDB.map(a => `${a.name} - ${a.date}`).join('\n');
                    } else {
                        response = "No appointments found.";
                    }
                }
                else if (userInput.toLowerCase().includes('show my reminders')) {
                    if (remindersDB.length > 0) {
                        response = "Your Reminders:\n" + remindersDB.map(r => `${r.medicine} at ${r.time}`).join('\n');
                    } else {
                        response = "No reminders found.";
                    }
                }
                else if (userInput.toLowerCase().includes('help')) {
                    response = `I can help with:
- Book appointment for [name]
- Set reminder for [medicine] at [time]
- Show my appointments
- Show my reminders`;
                }
                
                setTimeout(() => {
                    addChatMessage(response, 'bot');
                }, 500);
            }
            
            document.getElementById('send-btn')?.addEventListener('click', processChatInput);
            document.getElementById('chat-input')?.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') processChatInput();
            });

            document.getElementById('voice-btn')?.addEventListener('click', () => {
                addChatMessage("Voice input is not supported in this demo. Please type your message.", 'bot');
            });

            // PWA Installation
            window.addEventListener('beforeinstallprompt', (e) => {
                e.preventDefault();
                deferredPrompt = e;
                const installBtn = document.getElementById('installBtn');
                if (installBtn) {
                    installBtn.style.display = 'block';
                    installBtn.addEventListener('click', () => {
                        installBtn.style.display = 'none';
                        deferredPrompt.prompt();
                        deferredPrompt.userChoice.then((choiceResult) => {
                            if (choiceResult.outcome === 'accepted') {
                                console.log('User accepted install prompt');
                            }
                            deferredPrompt = null;
                        });
                    });
                }
            });

            // Service Worker Registration
            if ('serviceWorker' in navigator) {
                window.addEventListener('load', () => {
                    navigator.serviceWorker.register('/sw.js').then(registration => {
                        console.log('ServiceWorker registration successful');
                    }).catch(err => {
                        console.log('ServiceWorker registration failed: ', err);
                    });
                });
            }
        }

        // Initialize the application when DOM is loaded
        document.addEventListener('DOMContentLoaded', initApp);
    </script>
</body>
</html>
