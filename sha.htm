<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SMART HOSPITAL ASSISTANCE</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        /* Base Styles */
        :root {
            --primary-color: #6a4c93;
            --secondary-color: #8a5a44;
            --accent-color: #f8bbd0;
            --dark-color: #1a1a2e;
            --light-color: #e6f9ff;
            --danger-color: #ff6b6b;
            --success-color: #51cf66;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }

        body {
            overflow: hidden;
            background-color: var(--dark-color);
            color: var(--light-color);
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .container {
            width: 100%;
            max-width: 1200px;
            height: 100%;
            padding: 20px;
        }

        .page {
            width: 100%;
            height: 100%;
            background: rgba(26, 26, 46, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(248, 187, 208, 0.2);
            transition: all 0.5s ease;
        }

        .hidden {
            display: none;
            opacity: 0;
            transform: translateY(20px);
        }

        /* Jellyfish Theme Elements */
        .jellyfish-logo {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 30px;
        }

        .jellyfish-logo.small {
            flex-direction: row;
            margin-bottom: 0;
            gap: 15px;
        }

        .jellyfish {
            position: relative;
            width: 100px;
            height: 100px;
            margin-bottom: 15px;
        }

        .jellyfish .bell {
            position: absolute;
            width: 60px;
            height: 80px;
            background: linear-gradient(135deg, var(--primary-color), var(--accent-color));
            border-radius: 50% 50% 40% 40%;
            top: 0;
            left: 20px;
            box-shadow: 0 10px 20px rgba(106, 76, 147, 0.5);
            animation: float 3s ease-in-out infinite;
            filter: drop-shadow(0 0 10px rgba(248, 187, 208, 0.7));
        }

        .jellyfish .tentacles {
            position: absolute;
            bottom: -30px;
            left: 35px;
        }

        .jellyfish .tentacle {
            width: 5px;
            height: 40px;
            background: linear-gradient(to bottom, var(--accent-color), transparent);
            margin: 0 auto 5px;
            border-radius: 5px;
            animation: wave 3s ease-in-out infinite;
            transform-origin: top;
        }

        .jellyfish .tentacle:nth-child(1) {
            animation-delay: 0.1s;
        }
        .jellyfish .tentacle:nth-child(2) {
            animation-delay: 0.3s;
        }
        .jellyfish .tentacle:nth-child(3) {
            animation-delay: 0.5s;
        }
        .jellyfish .tentacle:nth-child(4) {
            animation-delay: 0.7s;
        }

        @keyframes float {
            0%, 100% {
                transform: translateY(0);
            }
            50% {
                transform: translateY(-10px);
            }
        }

        @keyframes wave {
            0%, 100% {
                transform: rotate(0deg);
            }
            25% {
                transform: rotate(10deg);
            }
            75% {
                transform: rotate(-10deg);
            }
        }

        /* 3D UI Elements */
        .three-d-button {
            position: relative;
            padding: 12px 25px;
            background: linear-gradient(145deg, var(--primary-color), #5a3d7a);
            color: white;
            border: none;
            border-radius: 10px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            outline: none;
            transition: all 0.3s ease;
            box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.3),
                        -2px -2px 10px rgba(255, 255, 255, 0.1),
                        inset 0 0 10px rgba(255, 255, 255, 0.1);
        }

        .three-d-button:hover {
            transform: translateY(-3px);
            box-shadow: 8px 8px 20px rgba(0, 0, 0, 0.4),
                        -3px -3px 15px rgba(255, 255, 255, 0.15),
                        inset 0 0 15px rgba(255, 255, 255, 0.2);
        }

        .three-d-button:active {
            transform: translateY(1px);
            box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.3),
                        -1px -1px 5px rgba(255, 255, 255, 0.1),
                        inset 0 0 15px rgba(0, 0, 0, 0.2);
        }

        .three-d-button.danger {
            background: linear-gradient(145deg, var(--danger-color), #e05555);
        }

        .three-d-menu-button {
            position: relative;
            width: 200px;
            height: 200px;
            background: linear-gradient(145deg, #4a3c6e, #5a4a7f);
            border-radius: 20px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: white;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 10px 10px 30px rgba(0, 0, 0, 0.3),
                        -5px -5px 20px rgba(255, 255, 255, 0.1),
                        inset 0 0 15px rgba(255, 255, 255, 0.1);
        }

        .three-d-menu-button:hover {
            transform: translateY(-10px);
            box-shadow: 15px 15px 40px rgba(0, 0, 0, 0.4),
                        -7px -7px 25px rgba(255, 255, 255, 0.15),
                        inset 0 0 20px rgba(255, 255, 255, 0.2);
        }

        .three-d-menu-button:active {
            transform: translateY(5px);
            box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.3),
                        -2px -2px 10px rgba(255, 255, 255, 0.1),
                        inset 0 0 20px rgba(0, 0, 0, 0.2);
        }

        .button-icon {
            font-size: 50px;
            margin-bottom: 15px;
            text-shadow: 0 0 10px rgba(248, 187, 208, 0.7);
        }

        .three-d-input {
            width: 100%;
            padding: 12px 15px;
            background: rgba(26, 26, 46, 0.7);
            border: 1px solid rgba(248, 187, 208, 0.3);
            border-radius: 8px;
            color: white;
            font-size: 16px;
            transition: all 0.3s ease;
            box-shadow: inset 3px 3px 10px rgba(0, 0, 0, 0.3),
                        inset -3px -3px 10px rgba(255, 255, 255, 0.05);
        }

        .three-d-input:focus {
            outline: none;
            border-color: var(--accent-color);
            box-shadow: inset 5px 5px 15px rgba(0, 0, 0, 0.4),
                        inset -5px -5px 15px rgba(255, 255, 255, 0.1),
                        0 0 10px rgba(248, 187, 208, 0.5);
        }

        /* Page Specific Styles */
        .login-form {
            max-width: 400px;
            margin: 0 auto;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--accent-color);
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 1px solid rgba(248, 187, 208, 0.2);
        }

        .menu-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 30px;
            margin-top: 40px;
        }

        .form-container {
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
        }

        .form-column {
            flex: 1;
            min-width: 300px;
        }

        .full-width {
            width: 100%;
        }

        .patient-details {
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
            margin-top: 30px;
            background: rgba(26, 26, 46, 0.5);
            padding: 30px;
            border-radius: 15px;
            border: 1px solid rgba(248, 187, 208, 0.2);
        }

        .details-column {
            flex: 1;
            min-width: 300px;
        }

        .detail-item {
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px dashed rgba(248, 187, 208, 0.1);
        }

        .detail-label {
            font-weight: 600;
            color: var(--accent-color);
            display: inline-block;
            min-width: 150px;
        }

        .detail-value {
            color: var(--light-color);
        }

        .photo-column {
            width: 300px;
            display: flex;
            justify-content: center;
        }

        .patient-photo {
            width: 250px;
            height: 250px;
            background: rgba(26, 26, 46, 0.7);
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
            border: 2px solid var(--accent-color);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
        }

        .photo-placeholder {
            color: rgba(255, 255, 255, 0.5);
            font-style: italic;
        }

        .photo-preview {
            width: 300px;
            height: 300px;
            margin: 20px auto;
            background: rgba(26, 26, 46, 0.7);
            border-radius: 10px;
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: hidden;
            border: 2px dashed var(--accent-color);
        }

        .preview-placeholder {
            color: rgba(255, 255, 255, 0.5);
            font-style: italic;
        }

        .button-group {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
        }

        .warning {
            color: var(--danger-color);
            text-align: center;
            margin-top: 20px;
            font-weight: 600;
        }

        /* Chat Interface */
        .chat-container {
            display: flex;
            flex-direction: column;
            height: calc(100% - 100px);
        }

        .chat-box {
            flex: 1;
            background: rgba(26, 26, 46, 0.5);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            overflow-y: auto;
            border: 1px solid rgba(248, 187, 208, 0.2);
        }

        .chat-message {
            margin-bottom: 15px;
            max-width: 80%;
            padding: 12px 18px;
            border-radius: 18px;
            position: relative;
            animation: messageAppear 0.3s ease-out;
        }

        .chat-message.bot {
            background: rgba(106, 76, 147, 0.3);
            border-bottom-left-radius: 5px;
            margin-right: auto;
            border: 1px solid rgba(106, 76, 147, 0.5);
        }

        .chat-message.user {
            background: rgba(248, 187, 208, 0.2);
            border-bottom-right-radius: 5px;
            margin-left: auto;
            border: 1px solid rgba(248, 187, 208, 0.3);
        }

        .chat-input {
            display: flex;
            gap: 10px;
        }

        .chat-input input {
            flex: 1;
        }

        .voice-btn {
            width: 50px;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 20px;
        }

        @keyframes messageAppear {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .page {
                padding: 20px;
            }
            
            .menu-grid {
                grid-template-columns: 1fr 1fr;
            }
            
            .patient-details, .form-container {
                flex-direction: column;
            }
            
            .photo-column {
                width: 100%;
                margin-top: 20px;
            }
        }

        @media (max-width: 480px) {
            .menu-grid {
                grid-template-columns: 1fr;
            }
            
            .header h2 {
                font-size: 18px;
            }
            
            .three-d-menu-button {
                width: 100%;
                height: 150px;
            }
        }
    </style>
</head>
<body>
    <!-- Main Container -->
    <div class="container" id="main-container">
        <!-- Login Page (Default View) -->
        <div class="page" id="login-page">
            <div class="jellyfish-logo">
                <div class="jellyfish">
                    <div class="bell"></div>
                    <div class="tentacles">
                        <div class="tentacle"></div>
                        <div class="tentacle"></div>
                        <div class="tentacle"></div>
                        <div class="tentacle"></div>
                    </div>
                </div>
                <h1>PRATHAM HOSPITAL</h1>
            </div>
            
            <div class="login-form">
                <div class="form-group">
                    <label for="username">Username</label>
                    <input type="text" id="username" class="three-d-input">
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <input type="password" id="password" class="three-d-input">
                </div>
                <button class="three-d-button" id="login-btn">LOGIN</button>
            </div>
        </div>
        
        <!-- Main Menu Page -->
        <div class="page hidden" id="main-menu">
            <div class="header">
                <div class="jellyfish-logo small">
                    <div class="jellyfish">
                        <div class="bell"></div>
                        <div class="tentacles">
                            <div class="tentacle"></div>
                            <div class="tentacle"></div>
                        </div>
                    </div>
                </div>
                <h2>SMART HOSPITAL ASSISTANCE</h2>
                <button class="three-d-button logout-btn" id="logout-btn">LOGOUT</button>
            </div>
            
            <div class="menu-grid">
                <button class="three-d-menu-button" data-page="add-patient">
                    <div class="button-icon">➕</div>
                    <span>Add Patient</span>
                </button>
                <button class="three-d-menu-button" data-page="view-patient">
                    <div class="button-icon">👁️</div>
                    <span>View Patient</span>
                </button>
                <button class="three-d-menu-button" data-page="delete-patient">
                    <div class="button-icon">❌</div>
                    <span>Delete Patient</span>
                </button>
                <button class="three-d-menu-button" data-page="upload-photo">
                    <div class="button-icon">📷</div>
                    <span>Upload Photo</span>
                </button>
                <button class="three-d-menu-button" data-page="ai-assistant">
                    <div class="button-icon">🤖</div>
                    <span>AI Assistant</span>
                </button>
            </div>
        </div>
        
        <!-- Add Patient Page -->
        <div class="page hidden" id="add-patient">
            <div class="header">
                <button class="three-d-button back-btn" data-page="main-menu">← BACK</button>
                <h2>ADD NEW PATIENT</h2>
            </div>
            
            <div class="form-container">
                <div class="form-column">
                    <div class="form-group">
                        <label for="patient-id">Patient ID</label>
                        <input type="text" id="patient-id" class="three-d-input">
                    </div>
                    <div class="form-group">
                        <label for="patient-name">Patient Name</label>
                        <input type="text" id="patient-name" class="three-d-input">
                    </div>
                    <div class="form-group">
                        <label for="doctor-name">Doctor Name</label>
                        <input type="text" id="doctor-name" class="three-d-input">
                    </div>
                    <div class="form-group">
                        <label for="age">Age</label>
                        <input type="number" id="age" class="three-d-input">
                    </div>
                </div>
                <div class="form-column">
                    <div class="form-group">
                        <label for="gender">Gender (M/F/Other)</label>
                        <input type="text" id="gender" class="three-d-input">
                    </div>
                    <div class="form-group">
                        <label for="contact">Contact Number</label>
                        <input type="text" id="contact" class="three-d-input">
                    </div>
                    <div class="form-group">
                        <label for="medication">Medication</label>
                        <input type="text" id="medication" class="three-d-input">
                    </div>
                    <div class="form-group">
                        <label for="appointment-date">Appointment Date</label>
                        <input type="date" id="appointment-date" class="three-d-input">
                    </div>
                </div>
                <div class="form-group full-width">
                    <label for="treatment-history">Treatment History</label>
                    <textarea id="treatment-history" class="three-d-input" rows="4"></textarea>
                </div>
                <button class="three-d-button save-btn" id="save-patient-btn">SAVE PATIENT</button>
            </div>
        </div>
        
        <!-- View Patient Page -->
        <div class="page hidden" id="view-patient">
            <div class="header">
                <button class="three-d-button back-btn" data-page="main-menu">← BACK</button>
                <h2>VIEW PATIENT DETAILS</h2>
            </div>
            
            <div class="search-container">
                <div class="form-group">
                    <label for="search-id">Enter Patient ID</label>
                    <div class="search-box">
                        <input type="text" id="search-id" class="three-d-input">
                        <button class="three-d-button" id="search-btn">SEARCH</button>
                    </div>
                </div>
            </div>
            
            <div class="patient-details hidden" id="patient-details">
                <div class="details-column">
                    <div class="detail-item">
                        <span class="detail-label">Patient ID:</span>
                        <span class="detail-value" id="detail-id"></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Patient Name:</span>
                        <span class="detail-value" id="detail-name"></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Doctor Name:</span>
                        <span class="detail-value" id="detail-doctor"></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Age:</span>
                        <span class="detail-value" id="detail-age"></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Gender:</span>
                        <span class="detail-value" id="detail-gender"></span>
                    </div>
                </div>
                <div class="details-column">
                    <div class="detail-item">
                        <span class="detail-label">Contact:</span>
                        <span class="detail-value" id="detail-contact"></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Medication:</span>
                        <span class="detail-value" id="detail-medication"></span>
                    </div>
                    <div class="detail-item">
                        <span class="detail-label">Appointment Date:</span>
                        <span class="detail-value" id="detail-date"></span>
                    </div>
                    <div class="detail-item full-width">
                        <span class="detail-label">Treatment History:</span>
                        <div class="detail-value" id="detail-history"></div>
                    </div>
                </div>
                <div class="photo-column">
                    <div class="patient-photo" id="patient-photo">
                        <div class="photo-placeholder">NO PHOTO AVAILABLE</div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Delete Patient Page -->
        <div class="page hidden" id="delete-patient">
            <div class="header">
                <button class="three-d-button back-btn" data-page="main-menu">← BACK</button>
                <h2>DELETE PATIENT</h2>
            </div>
            
            <div class="delete-container">
                <div class="form-group">
                    <label for="delete-id">Enter Patient ID to Delete</label>
                    <input type="text" id="delete-id" class="three-d-input">
                </div>
                <button class="three-d-button danger" id="delete-btn">DELETE PATIENT</button>
                <div class="warning">Warning: This action cannot be undone!</div>
            </div>
        </div>
        
        <!-- Upload Photo Page -->
        <div class="page hidden" id="upload-photo">
            <div class="header">
                <button class="three-d-button back-btn" data-page="main-menu">← BACK</button>
                <h2>UPLOAD PATIENT PHOTO</h2>
            </div>
            
            <div class="upload-container">
                <div class="form-group">
                    <label for="upload-id">Enter Patient ID</label>
                    <input type="text" id="upload-id" class="three-d-input">
                </div>
                
                <div class="photo-preview" id="photo-preview">
                    <div class="preview-placeholder">NO PHOTO SELECTED</div>
                </div>
                
                <div class="button-group">
                    <button class="three-d-button" id="browse-btn">BROWSE PHOTO</button>
                    <button class="three-d-button" id="upload-btn">UPLOAD PHOTO</button>
                </div>
                
                <input type="file" id="photo-input" accept="image/*" style="display: none;">
            </div>
        </div>
        
        <!-- AI Assistant Page -->
        <div class="page hidden" id="ai-assistant">
            <div class="header">
                <button class="three-d-button back-btn" data-page="main-menu">← BACK</button>
                <h2>AI HEALTH ASSISTANT</h2>
            </div>
            
            <div class="chat-container">
                <div class="chat-box" id="chat-box">
                    <div class="chat-message bot">
                        <div class="message-content">Hello! How can I assist you today?</div>
                    </div>
                </div>
                
                <div class="chat-input">
                    <input type="text" id="chat-input" class="three-d-input" placeholder="Type your message...">
                    <button class="three-d-button" id="send-btn">SEND</button>
                    <button class="three-d-button voice-btn" id="voice-btn">🎤</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Database Simulation
        let patientsDB = [];
        let appointmentsDB = [];
        let remindersDB = [];

        // DOM Elements
        const pages = {
            'login-page': document.getElementById('login-page'),
            'main-menu': document.getElementById('main-menu'),
            'add-patient': document.getElementById('add-patient'),
            'view-patient': document.getElementById('view-patient'),
            'delete-patient': document.getElementById('delete-patient'),
            'upload-photo': document.getElementById('upload-photo'),
            'ai-assistant': document.getElementById('ai-assistant')
        };

        // Navigation Functions
        function showPage(pageId) {
            Object.values(pages).forEach(page => {
                if (page) {
                    page.classList.add('hidden');
                }
            });
            
            if (pages[pageId]) {
                pages[pageId].classList.remove('hidden');
            }
        }

        // Helper Functions
        function showError(message) {
            Swal.fire({
                title: 'Error',
                text: message,
                icon: 'error',
                background: '#1a1a2e',
                color: '#e6f9ff',
                confirmButtonColor: '#6a4c93'
            });
        }

        function addChatMessage(content, sender) {
            const chatBox = document.getElementById('chat-box');
            if (!chatBox) return;
            
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('chat-message', sender);
            
            const contentDiv = document.createElement('div');
            contentDiv.classList.add('message-content');
            contentDiv.textContent = content;
            
            messageDiv.appendChild(contentDiv);
            chatBox.appendChild(messageDiv);
            chatBox.scrollTop = chatBox.scrollHeight;
        }

        // Initialize the application
        function initApp() {
            // Login Button
            const loginBtn = document.getElementById('login-btn');
            if (loginBtn) {
                loginBtn.addEventListener('click', () => {
                    const username = document.getElementById('username')?.value;
                    const password = document.getElementById('password')?.value;
                    
                    if (username === 'pratham' && password === '1234') {
                        showPage('main-menu');
                    } else {
                        showError('Invalid username or password!');
                    }
                });
            }

            // Logout Button
            const logoutBtn = document.getElementById('logout-btn');
            if (logoutBtn) {
                logoutBtn.addEventListener('click', () => {
                    showPage('login-page');
                });
            }

            // Menu buttons
            document.querySelectorAll('.three-d-menu-button').forEach(button => {
                button.addEventListener('click', () => {
                    const page = button.getAttribute('data-page');
                    showPage(page);
                });
            });

            // Back buttons
            document.querySelectorAll('.back-btn').forEach(button => {
                button.addEventListener('click', () => {
                    const page = button.getAttribute('data-page');
                    showPage(page);
                });
            });

            // Add Patient
            const savePatientBtn = document.getElementById('save-patient-btn');
            if (savePatientBtn) {
                savePatientBtn.addEventListener('click', () => {
                    const patient = {
                        id: document.getElementById('patient-id')?.value,
                        name: document.getElementById('patient-name')?.value,
                        doctor: document.getElementById('doctor-name')?.value,
                        age: document.getElementById('age')?.value,
                        gender: document.getElementById('gender')?.value,
                        contact: document.getElementById('contact')?.value,
                        medication: document.getElementById('medication')?.value,
                        appointmentDate: document.getElementById('appointment-date')?.value,
                        treatmentHistory: document.getElementById('treatment-history')?.value,
                        photoPath: ''
                    };
                    
                    if (!patient.id || !patient.name) {
                        showError('Patient ID and Name are required fields!');
                        return;
                    }
                    
                    if (patientsDB.some(p => p.id === patient.id)) {
                        showError('Patient ID already exists!');
                        return;
                    }
                    
                    patientsDB.push(patient);
                    
                    Swal.fire({
                        title: 'Success',
                        text: 'Patient added successfully!',
                        icon: 'success',
                        background: '#1a1a2e',
                        color: '#e6f9ff',
                        confirmButtonColor: '#6a4c93'
                    }).then(() => {
                        showPage('main-menu');
                        document.querySelectorAll('#add-patient input, #add-patient textarea').forEach(el => {
                            if (el) el.value = '';
                        });
                    });
                });
            }

            // View Patient
            const searchBtn = document.getElementById('search-btn');
            if (searchBtn) {
                searchBtn.addEventListener('click', () => {
                    const patientId = document.getElementById('search-id')?.value;
                    const detailsContainer = document.getElementById('patient-details');
                    const photoContainer = document.getElementById('patient-photo');
                    
                    if (!patientId) {
                        showError('Please enter a Patient ID!');
                        return;
                    }
                    
                    const patient = patientsDB.find(p => p.id === patientId);
                    
                    if (!patient) {
                        if (detailsContainer) detailsContainer.classList.add('hidden');
                        showError('No patient found with that ID!');
                        return;
                    }
                    
                    // Fill in details
                    const detailIds = [
                        'detail-id', 'detail-name', 'detail-doctor', 'detail-age',
                        'detail-gender', 'detail-contact', 'detail-medication',
                        'detail-date', 'detail-history'
                    ];
                    
                    detailIds.forEach(id => {
                        const element = document.getElementById(id);
                        if (element) {
                            const field = id.split('-')[1];
                            element.textContent = patient[field] || '';
                        }
                    });
                    
                    // Handle photo
                    if (photoContainer) {
                        photoContainer.innerHTML = '';
                        if (patient.photoPath) {
                            const img = document.createElement('img');
                            img.src = patient.photoPath;
                            img.style.width = '100%';
                            img.style.height = '100%';
                            img.style.objectFit = 'cover';
                            photoContainer.appendChild(img);
                        } else {
                            photoContainer.innerHTML = '<div class="photo-placeholder">NO PHOTO AVAILABLE</div>';
                        }
                    }
                    
                    if (detailsContainer) detailsContainer.classList.remove('hidden');
                });
            }

            // Delete Patient
            const deleteBtn = document.getElementById('delete-btn');
            if (deleteBtn) {
                deleteBtn.addEventListener('click', () => {
                    const patientId = document.getElementById('delete-id')?.value;
                    
                    if (!patientId) {
                        showError('Please enter a Patient ID!');
                        return;
                    }
                    
                    const patientIndex = patientsDB.findIndex(p => p.id === patientId);
                    
                    if (patientIndex === -1) {
                        showError('No patient found with that ID!');
                        return;
                    }
                    
                    Swal.fire({
                        title: 'Confirm Deletion',
                        text: `Are you sure you want to delete patient ${patientsDB[patientIndex].name}?`,
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#ff6b6b',
                        cancelButtonColor: '#6a4c93',
                        background: '#1a1a2e',
                        color: '#e6f9ff',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            patientsDB.splice(patientIndex, 1);
                            Swal.fire({
                                title: 'Deleted!',
                                text: 'Patient has been deleted.',
                                icon: 'success',
                                background: '#1a1a2e',
                                color: '#e6f9ff',
                                confirmButtonColor: '#6a4c93'
                            }).then(() => {
                                showPage('main-menu');
                                const deleteInput = document.getElementById('delete-id');
                                if (deleteInput) deleteInput.value = '';
                            });
                        }
                    });
                });
            }

            // Upload Photo
            let selectedPhoto = null;
            const browseBtn = document.getElementById('browse-btn');
            const photoInput = document.getElementById('photo-input');
            
            if (browseBtn && photoInput) {
                browseBtn.addEventListener('click', () => {
                    photoInput.click();
                });
                
                photoInput.addEventListener('change', (e) => {
                    const file = e.target.files[0];
                    if (!file) return;
                    
                    const reader = new FileReader();
                    reader.onload = (event) => {
                        selectedPhoto = event.target.result;
                        const preview = document.getElementById('photo-preview');
                        if (preview) {
                            preview.innerHTML = '';
                            const img = document.createElement('img');
                            img.src = selectedPhoto;
                            img.style.width = '100%';
                            img.style.height = '100%';
                            img.style.objectFit = 'cover';
                            preview.appendChild(img);
                        }
                    };
                    reader.readAsDataURL(file);
                });
            }

            const uploadBtn = document.getElementById('upload-btn');
            if (uploadBtn) {
                uploadBtn.addEventListener('click', () => {
                    const patientId = document.getElementById('upload-id')?.value;
                    
                    if (!patientId) {
                        showError('Please enter a Patient ID!');
                        return;
                    }
                    
                    if (!selectedPhoto) {
                        showError('Please select a photo first!');
                        return;
                    }
                    
                    const patientIndex = patientsDB.findIndex(p => p.id === patientId);
                    
                    if (patientIndex === -1) {
                        showError('No patient found with that ID!');
                        return;
                    }
                    
                    patientsDB[patientIndex].photoPath = selectedPhoto;
                    
                    Swal.fire({
                        title: 'Success',
                        text: 'Photo uploaded successfully!',
                        icon: 'success',
                        background: '#1a1a2e',
                        color: '#e6f9ff',
                        confirmButtonColor: '#6a4c93'
                    }).then(() => {
                        showPage('main-menu');
                        const uploadInput = document.getElementById('upload-id');
                        if (uploadInput) uploadInput.value = '';
                        selectedPhoto = null;
                        const preview = document.getElementById('photo-preview');
                        if (preview) preview.innerHTML = '<div class="preview-placeholder">NO PHOTO SELECTED</div>';
                        if (photoInput) photoInput.value = '';
                    });
                });
            }

            // AI Assistant
            const sendBtn = document.getElementById('send-btn');
            const chatInput = document.getElementById('chat-input');
            
            function processChatInput() {
                if (!chatInput) return;
                
                const userInput = chatInput.value.trim();
                if (!userInput) return;
                
                addChatMessage(userInput, 'user');
                chatInput.value = '';
                
                // Process input and generate response
                let response = "I didn't understand. How can I help you?";
                
                if (userInput.toLowerCase().includes('book appointment')) {
                    const name = userInput.toLowerCase().includes('for') ? 
                        userInput.split('for')[1].trim() : 'Patient';
                    appointmentsDB.push({ name, date: 'Tomorrow' });
                    response = `Appointment booked for ${name} on Tomorrow.`;
                } 
                else if (userInput.toLowerCase().includes('set reminder')) {
                    const words = userInput.split(' ');
                    if (words.includes('at')) {
                        const index = words.indexOf('at');
                        const medicine = words.slice(0, index).join(' ');
                        const time = words[index + 1];
                        remindersDB.push({ medicine, time });
                        response = `Reminder set for ${medicine} at ${time}.`;
                    }
                }
                else if (userInput.toLowerCase().includes('show my appointments')) {
                    if (appointmentsDB.length > 0) {
                        response = "Your Appointments:\n" + appointmentsDB.map(a => `${a.name} - ${a.date}`).join('\n');
                    } else {
                        response = "No appointments found.";
                    }
                }
                else if (userInput.toLowerCase().includes('show my reminders')) {
                    if (remindersDB.length > 0) {
                        response = "Your Reminders:\n" + remindersDB.map(r => `${r.medicine} at ${r.time}`).join('\n');
                    } else {
                        response = "No reminders found.";
                    }
                }
                else if (userInput.toLowerCase().includes('help')) {
                    response = `I can help with:
- Book appointment for [name]
- Set reminder for [medicine] at [time]
- Show my appointments
- Show my reminders`;
                }
                
                setTimeout(() => {
                    addChatMessage(response, 'bot');
                }, 500);
            }
            
            if (sendBtn && chatInput) {
                sendBtn.addEventListener('click', processChatInput);
                chatInput.addEventListener('keypress', (e) => {
                    if (e.key === 'Enter') {
                        processChatInput();
                    }
                });
            }

            const voiceBtn = document.getElementById('voice-btn');
            if (voiceBtn) {
                voiceBtn.addEventListener('click', () => {
                    addChatMessage("Voice input is not supported in this demo. Please type your message.", 'bot');
                });
            }
        }

        // Initialize the application when DOM is loaded
        document.addEventListener('DOMContentLoaded', initApp);
    </script>
</body>
</html>
